name: EKS Deployment Debug and Fix

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  debug-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name vprofile-eks

      - name: Check Cluster Info
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Check Pod Status
        run: |
          kubectl get pods -n default
          kubectl describe pods -n default

      - name: Check Services
        run: |
          kubectl get svc -n default
          kubectl describe svc my-app

      - name: Expose my-app Service
        run: |
          kubectl patch svc my-app -p '{"spec": {"type": "LoadBalancer"}}'

      - name: Validate Service Endpoints
        run: |
          kubectl get endpoints my-app
          kubectl describe svc my-app

      - name: Create Ingress Resource
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: my-app-ingress
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /
          spec:
            rules:
            - host: my-app.example.com
              http:
                paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: my-app
                      port:
                        number: 8080
          EOF

      - name: Inspect Application Logs
        run: |
          kubectl logs -l app=my-app -n default

      - name: Check Secret Status
        run: |
          kubectl get secrets -n default
          kubectl describe secret regcred

      - name: Recreate Docker Registry Secret (if needed)
        if: always()
        run: |
          kubectl delete secret regcred || true
          kubectl create secret docker-registry regcred \
              --docker-username=${{ secrets.DOCKER_USERNAME }} \
              --docker-password=${{ secrets.DOCKER_PASSWORD }} \
              --docker-email=${{ secrets.DOCKER_EMAIL }}

      - name: Verify Ingress Rules
        run: |
          kubectl describe ingress my-app-ingress

      - name: Final Deployment Check
        run: |
          kubectl get pods -n default
          kubectl get svc -n default
          kubectl get ingress -n default
